
CREATE QUERY tg_maximal_indep_set_random(STRING v_type, STRING e_type, INT max_iter = 100, BOOL print_accum = TRUE, STRING file_path = ""){
    /*
    Maximal Independent Set query only supports one edge type and works only for undirected graphs at the moment (8/12/20).
    */

    AndAccum @and_active;
    OrAccum @or_selected;
    MinAccum<INT> @min_r_min, @min_r;
    FILE f(file_path);
    INT iter = 0;

    Start = {v_type.*};
    Start = SELECT s
            FROM Start:s
            ACCUM
                IF s.outdegree(e_type) == 0 THEN
                    s.@or_selected += TRUE,
                    s.@and_active += FALSE
                END
            HAVING s.@and_active;

    WHILE Start.size()>0 LIMIT max_iter DO
        Start = SELECT s
                FROM Start:s
                POST-ACCUM
                    s.@min_r_min = GSQL_INT_MAX,
                    s.@min_r = tg_rand_int(GSQL_INT_MIN, GSQL_INT_MAX);

        TMP = SELECT s
              FROM Start:s-(e_type:e)->v_type:t
              WHERE t.@and_active
              ACCUM
                  s.@min_r_min += t.@min_r;

        TMP = SELECT s
              FROM Start:s
              POST-ACCUM
                  IF s.@min_r < s.@min_r_min THEN
                      s.@or_selected += TRUE,
                      s.@and_active += FALSE
                  END
              HAVING s.@or_selected;

        TMP = SELECT s
              FROM TMP:s-(e_type:e)->v_type:t
              ACCUM
                  t.@and_active += FALSE;

        Start = SELECT s
                FROM Start:s
                WHERE s.@and_active;
    END;

    IF file_path != "" THEN
        f.println("Vertex");
    END;

    Start = {v_type.*};
    Start = SELECT s
            FROM Start:s
            WHERE s.@or_selected
            ACCUM
                IF file_path != "" THEN
                    f.println(s)
                END;

    IF print_accum THEN
        PRINT Start;
    END;
}
